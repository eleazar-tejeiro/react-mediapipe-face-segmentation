{"version":3,"sources":["components/Home/Home.js","components/AlterBackground.js","components/FaceFilter.js","components/FaceSegmentation/FaceSegmentation.js","components/ErrorPage/ErrorPage.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["Home","className","AlterBackground","selfieSegmentationRef","useRef","useState","isVirtualBg","setVirtualBg","isVirtualBgRef","webcamRef","canvasRef","backgroundImgRef","current","onResults","results","videoWidth","video","videoHeight","width","height","canvasElement","canvasCtx","getContext","save","clearRect","globalCompositeOperation","filter","drawImage","segmentationMask","image","restore","useEffect","selfieSegmentation","SelfieSegmentation","locateFile","file","setOptions","modelSelection","maskFilterImage","document","createElement","ref","objectFit","onload","crossOrigin","Camera","onFrame","a","send","start","src","close","handleOptionChange","e","target","value","type","checked","onChange","videoConstraints","facingMode","FaceFilter","faceMeshRef","filterImgRef","multiFaceLandmarks","length","keypoints","maskWidth","Math","abs","x","maskHeight","y","faceMesh","FaceMesh","maxNumFaces","minDetectionConfidence","minTrackingConfidence","FaceSegmentation","isBgMode","setIsBgMode","onClick","ErrorPage","App","exact","path","to","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.c17c3321.chunk.js","sourcesContent":["import React from 'react';\nimport './Home.css';\n\nconst Home = () =>{\n    return(\n        <div className=\"home-container\">\n            <h1>Face Segmentation with MediaPipe and React!</h1>\n            <h2>Done in order to apply to MoodMe</h2>\n            <h3>Uriel Tejeiro</h3>\n        </div>\n        \n    );\n}\n\nexport default Home;","import React, { useRef, useEffect, useState } from \"react\"\nimport Webcam from \"react-webcam\"\nimport { SelfieSegmentation } from \"@mediapipe/selfie_segmentation\"\nimport { Camera } from \"@mediapipe/camera_utils\"\n\nexport const AlterBackground = () => {\n  const selfieSegmentationRef = useRef(null)\n  const [isVirtualBg, setVirtualBg] = useState(false)\n  const isVirtualBgRef = useRef(isVirtualBg)\n  const webcamRef = useRef(null)\n  const canvasRef = useRef(null)\n  const backgroundImgRef = useRef({ current: null })\n\n  function onResults(results) {\n    const videoWidth = webcamRef.current.video.videoWidth\n    const videoHeight = webcamRef.current.video.videoHeight\n\n    canvasRef.current.width = videoWidth\n    canvasRef.current.height = videoHeight\n    const canvasElement = canvasRef.current\n    const canvasCtx = canvasElement.getContext(\"2d\")\n\n    canvasCtx.save()\n    canvasCtx.clearRect(0, 0, canvasElement.width, canvasElement.height)\n\n    canvasCtx.globalCompositeOperation = \"copy\"\n    canvasCtx.filter = 'blur(16px)'\n    canvasCtx.drawImage(\n      results.segmentationMask,\n      0,\n      0,\n      canvasElement.width,\n      canvasElement.height\n    )\n\n    canvasCtx.globalCompositeOperation = \"source-in\"\n    canvasCtx.filter = 'none';\n    canvasCtx.drawImage(\n      results.image,\n      0,\n      0,\n      canvasElement.width,\n      canvasElement.height\n    )\n\n    // Make all pixels not in the segmentation mask transparent\n    //canvasCtx.drawImage(results.segmentationMask, 0, 0, canvasElement.width, canvasElement.height);\n    canvasCtx.globalCompositeOperation = \"destination-atop\"\n    //canvasCtx.globalCompositeOperation = 'destination-atop';\n    canvasCtx.filter = isVirtualBgRef.current ? 'none' : 'blur(15px)';\n    canvasCtx.drawImage(\n      isVirtualBgRef.current ? backgroundImgRef.current : results.image,\n      0,\n      0,\n      canvasElement.width,\n      canvasElement.height\n    )\n\n    canvasCtx.restore()\n  }\n\n  useEffect(() => {\n    const selfieSegmentation = new SelfieSegmentation({\n      locateFile: (file) => {\n        return `https://cdn.jsdelivr.net/npm/@mediapipe/selfie_segmentation/${file}`\n      },\n    })\n    selfieSegmentationRef.current = selfieSegmentation\n\n    selfieSegmentation.setOptions({\n      modelSelection: 1,\n    })\n\n    selfieSegmentation.onResults(onResults)\n\n    if (\n      typeof webcamRef.current !== \"undefined\" &&\n      webcamRef.current !== null\n    ) {\n      const maskFilterImage = document.createElement(\"img\", {\n        ref: backgroundImgRef,\n      })\n      maskFilterImage.objectFit = \"contain\"\n      maskFilterImage.onload = function () {\n        backgroundImgRef.current = maskFilterImage\n        webcamRef.current.video.crossOrigin = \"anonymous\"\n\n        const camera = new Camera(webcamRef.current.video, {\n          onFrame: async () => {\n            webcamRef.current &&\n              (await selfieSegmentation.send({\n                image: webcamRef.current.video,\n              }))\n          },\n          width: 640,\n          height: 480,\n        })\n        camera.start()\n      }\n      maskFilterImage.src = \"images/architecture.jpg\"\n    }\n  }, [])\n\n  const cleanUpFunc = () => {\n    selfieSegmentationRef && selfieSegmentationRef.current.close()\n  }\n\n  useEffect(() => {\n    return () => {\n      cleanUpFunc()\n    }\n  }, [])\n\n  useEffect(() => {\n    isVirtualBgRef.current = isVirtualBg\n  }, [isVirtualBg])\n\n  const handleOptionChange = (e) => {\n    switch (e.target.value) {\n      case \"blur\":\n        setVirtualBg(false)\n        break\n      case \"virtual\":\n        setVirtualBg(true)\n        break\n      default:\n        setVirtualBg(false)\n        break\n    }\n  }\n\n  return (\n    <>\n      <div className=\"select-bg\">\n        <label>\n          <input\n            type=\"radio\"\n            value=\"blur\"\n            checked={!isVirtualBg}\n            onChange={handleOptionChange}\n          />\n          Blur Background\n        </label>\n        <label>\n          <input\n            type=\"radio\"\n            value=\"virtual\"\n            checked={isVirtualBg}\n            onChange={handleOptionChange}\n          />\n          Virtual Background\n        </label>\n      </div>\n      <Webcam\n        ref={webcamRef}\n        videoConstraints={{\n          facingMode: \"user\",\n        }}\n      />\n      <canvas ref={canvasRef} className=\"output_canvas\"></canvas>\n    </>\n  )\n}","import React, { useRef, useEffect } from \"react\"\nimport Webcam from \"react-webcam\"\nimport { FaceMesh } from \"@mediapipe/face_mesh\"\nimport { Camera } from \"@mediapipe/camera_utils\"\n\nexport const FaceFilter = () => {\n  const faceMeshRef = useRef(null)\n  const webcamRef = useRef(null)\n  const canvasRef = useRef(null)\n  const filterImgRef = useRef({ current: null })\n\n  function onResults(results) {\n    const videoWidth = webcamRef.current.video.videoWidth\n    const videoHeight = webcamRef.current.video.videoHeight\n\n    canvasRef.current.width = videoWidth\n    canvasRef.current.height = videoHeight\n    const canvasElement = canvasRef.current\n    const canvasCtx = canvasElement.getContext(\"2d\")\n    canvasCtx.clearRect(0, 0, canvasElement.width, canvasElement.height)\n    canvasCtx.drawImage(\n      results.image,\n      0,\n      0,\n      canvasElement.width,\n      canvasElement.height\n    )\n    if (results.multiFaceLandmarks.length > 0) {\n      const keypoints = results.multiFaceLandmarks[0]\n\n      const maskWidth = Math.abs(\n        keypoints[234].x * videoWidth - keypoints[454].x * videoWidth\n      )\n      const maskHeight =\n        Math.abs(\n          keypoints[234].y * videoHeight - keypoints[152].y * videoHeight\n        ) + 10\n      filterImgRef.current.width = `${maskWidth}`\n      filterImgRef.current.height = `${maskHeight}`\n\n      canvasCtx.drawImage(\n        filterImgRef.current,\n        keypoints[234].x * videoWidth,\n        keypoints[234].y * videoHeight - 10,\n        maskWidth,\n        maskHeight\n      )\n    }\n  }\n\n  useEffect(() => {\n    const faceMesh = new FaceMesh({\n      locateFile: (file) => {\n        return `https://cdn.jsdelivr.net/npm/@mediapipe/face_mesh/${file}`\n      },\n    })\n    faceMeshRef.current = faceMesh\n\n    faceMesh.setOptions({\n      maxNumFaces: 1,\n      minDetectionConfidence: 0.5,\n      minTrackingConfidence: 0.5,\n    })\n\n    faceMesh.onResults(onResults)\n\n    if (\n      typeof webcamRef.current !== \"undefined\" &&\n      webcamRef.current !== null\n    ) {\n      const maskFilterImage = document.createElement(\"img\", {\n        ref: filterImgRef,\n      })\n      maskFilterImage.objectFit = \"contain\"\n      maskFilterImage.onload = function () {\n        filterImgRef.current = maskFilterImage\n        webcamRef.current.video.crossOrigin = \"anonymous\"\n\n        const camera = new Camera(webcamRef.current.video, {\n          onFrame: async () => {\n            webcamRef.current &&\n              (await faceMesh.send({ image: webcamRef.current.video }))\n          },\n          width: 640,\n          height: 480,\n        })\n        camera.start()\n      }\n      maskFilterImage.src = \"images/mask4.png\"\n    }\n  }, [])\n\n  const cleanUpFunc = () => {\n    faceMeshRef.current && faceMeshRef.current.close()\n  }\n\n  useEffect(() => {\n    return () => {\n      cleanUpFunc()\n    }\n  }, [])\n\n  return (\n    <>\n      <Webcam ref={webcamRef} />\n      <canvas ref={canvasRef} className=\"output_canvas\"></canvas>\n    </>\n  )\n}\n","import \"./FaceSegmentation.css\"\nimport React, { useState } from \"react\"\nimport { AlterBackground } from \"../AlterBackground\"\nimport { FaceFilter } from \"../FaceFilter\"\n\nfunction FaceSegmentation() {\n  const [isBgMode, setIsBgMode] = useState(false)\n\n  return (\n    <div className=\"container-face-segmentation\">\n      <h2>Using MediaPipe</h2>\n      Switch to Mode: <button onClick={() => setIsBgMode(!isBgMode)}>\n        {isBgMode? \"Face Filter Effect\" : \"Background Manipulation and Blur Background\"}\n      </button><br/><br/>\n      {isBgMode ? <AlterBackground/> : <FaceFilter/>}\n    </div>\n  )\n}\n\nexport default FaceSegmentation;","import React from 'react';\nimport './ErrorPage.css';\n\nexport default function ErrorPage(){\n    return(\n        <div className='error-page-container'>\n            <h1 className='error-message'>404 Error: Page Not Found</h1>\n        </div>\n    )\n}","import './App.css';\nimport Home from './components/Home/Home';\nimport FaceSegmentation from './components/FaceSegmentation/FaceSegmentation';\nimport ErrorPage from './components/ErrorPage/ErrorPage';\nimport React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path='/'>\n          <Home />\n          <Link className=\"button\" to='/face-segmentation'>Face Segmentation</Link>\n        </Route>\n\n        <Route path='/face-segmentation'>\n          <FaceSegmentation/>\n          <Link className=\"button\" to='/'>Home</Link>\n        </Route>\n\n        <Route path='/'>\n          <ErrorPage />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nserviceWorkerRegistration.register();"],"sourceRoot":""}